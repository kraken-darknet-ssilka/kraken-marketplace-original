# smart_zip.py
import os
import zipfile
from datetime import datetime

def zip_folder(source, ignore_file=".zipignore"):
    if not os.path.exists(source):
        print("‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Ñ–∞–π–ª—ã/–ø–∞–ø–∫–∏
    ignore_patterns = []
    if os.path.exists(ignore_file):
        with open(ignore_file) as f:
            ignore_patterns = [line.strip() for line in f if line.strip() and not line.startswith("#")]

    # –ò–º—è –∞—Ä—Ö–∏–≤–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    zip_name = f"{os.path.basename(source)}_{timestamp}.zip"

    with zipfile.ZipFile(zip_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(source):
            # –£–±–∏—Ä–∞–µ–º –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –ø–∞–ø–∫–∏
            dirs[:] = [d for d in dirs if os.path.join(root, d) not in ignore_patterns]
            for file in files:
                filepath = os.path.join(root, file)
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–≥–Ω–æ—Ä
                if any(pattern in filepath for pattern in ignore_patterns):
                    continue
                # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –≤ –∞—Ä—Ö–∏–≤–µ
                arcname = os.path.relpath(filepath, start=source)
                zipf.write(filepath, arcname)
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {arcname}")

    print(f"\nüéâ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: {zip_name}")

if __name__ == "__main__":
    folder = input("–ü–∞–ø–∫–∞ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: ").strip()
    zip_folder(folder)
